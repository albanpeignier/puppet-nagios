# *Don't edit this file*
# Copy and edit files/nagios/conf.d/defaults.cfg

define contact{
       contact_name                    root
       alias                           Root
       service_notification_period     24x7
       host_notification_period        24x7
       service_notification_options    w,u,c,r
       host_notification_options       d,r
       service_notification_commands   notify-service-by-email
       host_notification_commands      notify-host-by-email
       email                           root@localhost
}

define contactgroup{
       contactgroup_name       admins
       alias                   Nagios Administrators
       members                 root
}

define hostextinfo{
       hostgroup_name   debian-servers
       notes            Debian GNU/Linux servers
       icon_image       base/debian.png
       icon_image_alt   Debian GNU/Linux
       vrml_image       debian.png
       statusmap_image  base/debian.gd2
}

# Generic host definition template - This is NOT a real host, just a template!

define host{
       name                            generic-host    ; The name of this host template
       notifications_enabled           1       ; Host notifications are enabled
       event_handler_enabled           1       ; Host event handler is enabled
       flap_detection_enabled          1       ; Flap detection is enabled
       failure_prediction_enabled      1       ; Failure prediction is enabled
       process_perf_data               1       ; Process performance data
       retain_status_information       1       ; Retain status information across program restarts
       retain_nonstatus_information    1       ; Retain non-status information across program restarts
       check_command                   check-host-alive
       max_check_attempts              10
       notification_interval           0
       notification_period             24x7
       notification_options            d,u,r
       contact_groups                  admins
       register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
}

# generic service template definition
define service{
       name                            generic-service ; The 'name' of this service template
       active_checks_enabled           1       ; Active service checks are enabled
       passive_checks_enabled          1       ; Passive service checks are enabled/accepted
       parallelize_check               1       ; Active service checks should be parallelized (disabling this can lead to major performance problems)
       obsess_over_service             1       ; We should obsess over this service (if necessary)
       check_freshness                 0       ; Default is to NOT check service 'freshness'
       notifications_enabled           1       ; Service notifications are enabled
       event_handler_enabled           1       ; Service event handler is enabled
       flap_detection_enabled          1       ; Flap detection is enabled
       failure_prediction_enabled      1       ; Failure prediction is enabled
       process_perf_data               1       ; Process performance data
       retain_status_information       1       ; Retain status information across program restarts
       retain_nonstatus_information    1       ; Retain non-status information across program restarts
       notification_interval           0		; Only send notifications on status change by default.
       is_volatile                     0
       check_period                    24x7
       normal_check_interval           5
       retry_check_interval            1
       max_check_attempts              4
       notification_period             24x7
       notification_options            w,u,c,r
       contact_groups                  admins
       register                        0       ; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
}

# Some generic hostgroup definitions

# A simple wildcard hostgroup
define hostgroup {
       hostgroup_name  all
		   alias           All Servers
		   members         *
}

# A list of your Debian GNU/Linux servers
define hostgroup {
       hostgroup_name  debian-servers
		   alias           Debian GNU/Linux Servers
       members         localhost
}

# A list of your web servers
define hostgroup {
       hostgroup_name  http-servers
       alias           HTTP servers
		   members         localhost
}

# A list of your ssh-accessible servers
define hostgroup {
       hostgroup_name  ssh-servers
       alias           SSH servers
       members         localhost
}

# nagios doesn't like monitoring hosts without services, so this is
# a group for devices that have no other "services" monitorable
# (like routers w/out snmp for example)
define hostgroup {
       hostgroup_name  ping-servers
       alias           Pingable servers
		   members         localhost
}

# A simple configuration file for monitoring the local host
# This can serve as an example for configuring other servers;
# Custom services specific to this host are added here, but services
# defined in nagios2-common_services.cfg may also apply.
define host{
       use                     generic-host            ; Name of host template to use
       host_name               localhost
       alias                   localhost
       address                 127.0.0.1
}

# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
       use                             generic-service         ; Name of service template to use
       host_name                       localhost
       service_description             Disk Space
       check_command                   check_all_disks!20%!10%
}

# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
       use                             generic-service         ; Name of service template to use
       host_name                       localhost
       service_description             Current Users
       check_command                   check_users!20!50
}

# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 processes.

define service{
       use                             generic-service         ; Name of service template to use
       host_name                       localhost
       service_description             Total Processes
		   check_command                   check_procs!250!400
}

# Define a service to check the load on the local machine. 
define service{
       use                             generic-service         ; Name of service template to use
       host_name                       localhost
       service_description             Current Load
    	 check_command                   check_load!5.0!4.0!3.0!10.0!6.0!4.0
}

# check that web services are running
define service {
       hostgroup_name                  http-servers
       service_description             HTTP
       check_command                   check_http
       use                             generic-service
}

# check that ssh services are running
define service {
       hostgroup_name                  ssh-servers
       service_description             Ssh
       check_command                   check_ssh
       use                             generic-service
}

# check that ping-only hosts are up
define service {
       hostgroup_name                  ping-servers
       service_description             Ping
       check_command                   check_ping!100.0,20%!500.0,60%
       use                             generic-service
}

# This defines a timeperiod where all times are valid for checks, 
# notifications, etc.  The classic "24x7" support nightmare. :-)

define timeperiod{
       timeperiod_name 24x7
       alias           24 Hours A Day, 7 Days A Week
       sunday          00:00-24:00
       monday          00:00-24:00
       tuesday         00:00-24:00
       wednesday       00:00-24:00
       thursday        00:00-24:00
       friday          00:00-24:00
       saturday        00:00-24:00
}

# Here is a slightly friendlier period during work hours
define timeperiod{
       timeperiod_name workhours
       alias           Standard Work Hours
       monday          09:00-17:00
       tuesday         09:00-17:00
       wednesday       09:00-17:00
       thursday        09:00-17:00
       friday          09:00-17:00
}

# The complement of workhours
define timeperiod{
       timeperiod_name nonworkhours
       alias           Non-Work Hours
       sunday          00:00-24:00
       monday          00:00-09:00,17:00-24:00
       tuesday         00:00-09:00,17:00-24:00
       wednesday       00:00-09:00,17:00-24:00
       thursday        00:00-09:00,17:00-24:00
       friday          00:00-09:00,17:00-24:00
       saturday        00:00-24:00
}

# This one is a favorite: never :)
define timeperiod{
       timeperiod_name never
       alias           Never
}
